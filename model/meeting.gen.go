// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameMeeting = "meeting"

// Meeting mapped from table <meeting>
type Meeting struct {
	ID        int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	BundleID  int32   `gorm:"column:bundle_id;type:int(11);not null;index:bundle_id,priority:1" json:"bundle_id" form:"bundle_id"`
	Name      string  `gorm:"column:name;type:varchar(255);not null" json:"name" form:"name"`
	Description   *string `gorm:"column:description;type:text" json:"description" form:"description"`
	Sequence   *int32 `gorm:"column:sequence;type:int(11)" json:"sequence"`
	StartedAt int64   `gorm:"column:started_at;" json:"started_at" form:"started_at"`
	EndedAt   int64   `gorm:"column:ended_at;" json:"ended_at" form:"ended_at"`
	StartedAtTe string   `json:"started_at_t"`
	EndedAtTe   string   `json:"ended_at_t"`
	Count      int       `json:"count"`
	IsRecording      int       `json:"is_recording"`
	TutorID   *int32  `gorm:"column:tutor_id;type:int(11);index:tutor_id,priority:1" json:"tutor_id" form:"tutor_id"`
	URL       *string `gorm:"column:url;type:text" json:"url" form:"url"`
	CreatedAt *int32  `gorm:"column:created_at;type:int(11)" json:"created_at"`
	UpdatedAt *int32  `gorm:"column:updated_at;type:int(11)" json:"updated_at"`
	CreatedBy *int32  `gorm:"column:created_by;type:int(11)" json:"created_by"`
	UpdatedBy *int32  `gorm:"column:updated_by;type:int(11)" json:"updated_by"`
	Bundle              Bundle `gorm:"foreignkey:BundleID" json:"Bundle"`
	Tutor               Tutor `gorm:"foreignkey:TutorID" json:"Tutor"`
}


type InputMeeting struct {
	BundleID  int32   `gorm:"column:bundle_id;type:int(11);not null;index:bundle_id,priority:1" json:"bundle_id" form:"bundle_id"`
	Name      string  `gorm:"column:name;type:varchar(255);not null" json:"name" form:"name"`
	Description   *string `gorm:"column:description;type:text" json:"description" form:"description"`
	Sequence   *int32 `gorm:"column:sequence;type:int(11)" json:"sequence" form:"sequence"`
	StartedAt int64   `gorm:"column:started_at;" json:"started_at" form:"started_at"`
	EndedAt   int64   `gorm:"column:ended_at;" json:"ended_at" form:"ended_at"`
	TutorID   *int32  `gorm:"column:tutor_id;type:int(11);index:tutor_id,priority:1" json:"tutor_id" form:"tutor_id"`
	URL       *string `gorm:"column:url;type:text" json:"url" form:"url"`
	CreatedAt *int32  `gorm:"column:created_at;type:int(11)" json:"created_at"`
}


type MeetingSelect struct {
	ID          int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	Name        string  `gorm:"column:name;type:varchar(255);not null" json:"text"`
}

func (i *InputMeeting) BeforeCreate(scope *gorm.DB) error {
	 now := int32(time.Now().UTC().Unix())
    i.CreatedAt = &now

    return nil
}


// TableName Meeting's table name
func (*Meeting) TableName() string {
	return TableNameMeeting
}

func (*InputMeeting) TableName() string {
	return TableNameMeeting
}

func (*MeetingSelect) TableName() string {
	return TableNameMeeting
}
