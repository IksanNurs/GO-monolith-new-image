// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameTutor = "tutor"

// Tutor mapped from table <tutor>
type Tutor struct {
	ID        int32  `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	Name      string  `gorm:"column:name;type:varchar(255);not null" json:"name" form:"name"`
	IsActive  int32 `gorm:"column:is_active;type:int(11);default:1" json:"is_active" form:"is_active"`
	UserID    *int32   `gorm:"column:user_id;type:int(11);not null;index:user_id,priority:1" json:"user_id"`
	CreatedAt *int32 `gorm:"column:created_at;type:int(11)" json:"created_at"`
	UpdatedAt *int32 `gorm:"column:updated_at;type:int(11)" json:"updated_at"`
	UpdatedBy *int32 `gorm:"column:updated_by;type:int(11)" json:"updated_by"`
}

type InputTutor struct {
	ID        int32  `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	Name      string  `gorm:"column:name;type:varchar(255);not null" json:"name" form:"name"`
	IsActive  *int32 `gorm:"column:is_active;type:int(11);default:1" json:"is_active" form:"is_active"`
	UserID    *int32   `gorm:"column:user_id;type:int(11);not null;index:user_id,priority:1" json:"user_id" form:"user_id"`
	CreatedAt *int32 `gorm:"column:created_at;type:int(11)" json:"created_at"`
	CreatedBy int32 `gorm:"column:created_by;type:int(11)" json:"created_by"`
}

type TutorSelect struct {
	ID          int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	Name        string  `gorm:"column:name;type:varchar(255);not null" json:"text"`
}

// TableName Tutor's table name
func (*Tutor) TableName() string {
	return TableNameTutor
}

func (*InputTutor) TableName() string {
	return TableNameTutor
}

func (*TutorSelect) TableName() string {
	return TableNameTutor
}

func (i *InputTutor) BeforeCreate(scope *gorm.DB) error {
    now := int32(time.Now().UTC().Unix())
    i.CreatedAt = &now
    return nil
}
