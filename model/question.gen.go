// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameQuestion = "question"

// Question mapped from table <question>
type Question struct {
	ID          int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	Question    string  `gorm:"column:question;type:text;not null" json:"question" form:"question"`
	Explanation *string `gorm:"column:explanation;type:text" json:"explanation" form:"explanation"`
	Batch   int32  `gorm:"column:batch;type:int(11);" json:"batch" form:"batch"`
	Topic       string  `gorm:"column:topic;type:varchar(255);not null" json:"topic" form:"topic"`
	Subtopic    *string `gorm:"column:subtopic;type:varchar(255)" json:"subtopic" form:"subtopic"`
	TutorName   *string `gorm:"column:tutor_name;type:varchar(255)" json:"tutor_name" form:"tutor_name"`
	TutorID     *int32  `gorm:"column:tutor_id;type:int(11);index:tutor_id,priority:1" json:"tutor_id" form:"tutor_id"`
	CompetencyArea *int32  `gorm:"column:competency_area;type:int(11)" json:"competency_area"` // Area Kompetensi
	Domain         *int32  `gorm:"column:domain;type:int(11)" json:"domain"`                   // Domain
	Science        *int32  `gorm:"column:science;type:int(11)" json:"science"`                 // Keilmuan
	NursingProcess *int32  `gorm:"column:nursing_process;type:int(11)" json:"nursing_process"` // Proses Keperawatan
	Effort         *int32  `gorm:"column:effort;type:int(11)" json:"effort"`                   // Upaya
	Need           *int32  `gorm:"column:need;type:int(11)" json:"need"`                       // Kebutuhan
	BodySystem     *int32  `gorm:"column:body_system;type:int(11)" json:"body_system"`         // Sistem Tubuh
	IsActive    *int32  `gorm:"column:is_active;type:int(11);default:1" json:"is_active" form:"is_active"`
	CreatedAt   *int32  `gorm:"column:created_at;type:int(11)" json:"created_at"`
	// UpdatedAt   *int32  `gorm:"column:updated_at;type:int(11)" json:"updated_at"`
	CreatedBy   *int32  `gorm:"column:created_by;type:int(11);index:created_by,priority:1" json:"created_by"`
	UpdatedBy   *int32  `gorm:"column:updated_by;type:int(11);index:updated_by,priority:1" json:"updated_by"`
    Option       []Option `gorm:"foreignkey:QuestionID" json:"Option" form:"Option"`
	Tutor        Tutor `gorm:"foreignkey:TutorID" json:"Tutor"`
	PackageQuestion     []PackageQuestion3 `gorm:"foreignkey:QuestionID" json:"PackageQuestion"`

}

type InputQuestion struct {
	ID          int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	Question    string  `gorm:"column:question;type:text;not null" json:"question" form:"question"`
	Explanation *string `gorm:"column:explanation;type:text" json:"explanation" form:"explanation"`
	Batch   int32  `gorm:"column:batch;type:int(11);" json:"batch" form:"batch"`
	Topic       string  `gorm:"column:topic;type:varchar(255);not null" json:"topic" form:"topic"`
	Subtopic    *string `gorm:"column:subtopic;type:varchar(255)" json:"subtopic" form:"subtopic"`
	TutorName   *string `gorm:"column:tutor_name;type:varchar(255)" json:"tutor_name" form:"tutor_name"`
	TutorID     *int32  `gorm:"column:tutor_id;type:int(11);index:tutor_id,priority:1" json:"tutor_id" form:"tutor_id"`
	CompetencyArea *int32  `gorm:"column:competency_area;type:int(11)" json:"competency_area" form:"competency_area"` // Area Kompetensi
	Domain         *int32  `gorm:"column:domain;type:int(11)" json:"domain" form:"domain"`                   // Domain
	Science        *int32  `gorm:"column:science;type:int(11)" json:"science" form:"science"`                 // Keilmuan
	NursingProcess *int32  `gorm:"column:nursing_process;type:int(11)" json:"nursing_process" form:"nursing_process"` // Proses Keperawatan
	Effort         *int32  `gorm:"column:effort;type:int(11)" json:"effort" form:"effort"`                   // Upaya
	Need           *int32  `gorm:"column:need;type:int(11)" json:"need" form:"need"`                       // Kebutuhan
	BodySystem     *int32  `gorm:"column:body_system;type:int(11)" json:"body_system" form:"body_system"`         // Sistem Tubuh
	IsActive    *int32  `gorm:"column:is_active;type:int(11);default:1" json:"is_active" form:"is_active"`
	CreatedAt   *int32  `gorm:"column:created_at;type:int(11)" json:"created_at"`
	// UpdatedAt   *int32  `gorm:"column:updated_at;type:int(11)" json:"updated_at"`
	CreatedBy   *int32  `gorm:"column:created_by;type:int(11);index:created_by,priority:1" json:"created_by"`
	UpdatedBy   *int32  `gorm:"column:updated_by;type:int(11);index:updated_by,priority:1" json:"updated_by"`
}

type Question1 struct {
	ID          int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	Question    string  `gorm:"column:question;type:text;not null" json:"question" form:"question"`
	Explanation *string `gorm:"column:explanation;type:text" json:"explanation" form:"explanation"`
	Batch   int32  `gorm:"column:batch;type:int(11);" json:"batch" form:"batch"`
	Topic       string  `gorm:"column:topic;type:varchar(255);not null" json:"topic" form:"topic"`
	Subtopic    *string `gorm:"column:subtopic;type:varchar(255)" json:"subtopic" form:"subtopic"`
	TutorName   string `gorm:"column:tutor_name;type:varchar(255)" json:"tutor_name" form:"tutor_name"`
	TutorID     *int32  `gorm:"column:tutor_id;type:int(11);index:tutor_id,priority:1" json:"tutor_id" form:"tutor_id"`
	MergedTo      *int32  `gorm:"column:merged_to;type:int(11)" json:"merged_to"`
	CompetencyArea *int32  `gorm:"column:competency_area;type:int(11)" json:"competency_area" form:"competency_area"` // Area Kompetensi
	Domain         *int32  `gorm:"column:domain;type:int(11)" json:"domain" form:"domain"`                   // Domain
	Science        *int32  `gorm:"column:science;type:int(11)" json:"science" form:"science"`                 // Keilmuan
	NursingProcess *int32  `gorm:"column:nursing_process;type:int(11)" json:"nursing_process" form:"nursing_process"` // Proses Keperawatan
	Effort         *int32  `gorm:"column:effort;type:int(11)" json:"effort" form:"effort"`                   // Upaya
	Need           *int32  `gorm:"column:need;type:int(11)" json:"need" form:"need"`                       // Kebutuhan
	BodySystem     *int32  `gorm:"column:body_system;type:int(11)" json:"body_system" form:"body_system"`         // Sistem Tubuh
	IsActive    int32  `gorm:"column:is_active;type:int(11);default:1" json:"is_active" form:"is_active"`
	CreatedAt   *int32  `gorm:"column:created_at;type:int(11)" json:"created_at"`
	// UpdatedAt   *int32  `gorm:"column:updated_at;type:int(11)" json:"updated_at"`
	CreatedBy   *int32  `gorm:"column:created_by;type:int(11);index:created_by,priority:1" json:"created_by"`
	UpdatedBy   *int32  `gorm:"column:updated_by;type:int(11);index:updated_by,priority:1" json:"updated_by"`
    Option       []Option `gorm:"foreignkey:QuestionID" json:"Option" form:"Option"`
	Tutor        Tutor `gorm:"foreignkey:TutorID" json:"Tutor"`

}

func (i *InputQuestion) BeforeCreate(scope *gorm.DB) error {
    now := int32(time.Now().UTC().Unix())
    i.CreatedAt = &now
    return nil
}


// TableName Question's table name
func (*Question) TableName() string {
	return TableNameQuestion
}
func (*Question1) TableName() string {
	return TableNameQuestion
}
func (*InputQuestion) TableName() string {
	return TableNameQuestion
}


