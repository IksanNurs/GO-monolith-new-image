// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameRequest = "request"

// Request mapped from table <request>
type Request struct {
	ID                  int32   `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	UserID              *int32  `gorm:"column:user_id;type:int(11);index:user_id,priority:1" json:"user_id"`
	Route               *string `gorm:"column:route;type:text" json:"route"`
	Method              *string `gorm:"column:method;type:varchar(255)" json:"method"`
	IPAddress           *string `gorm:"column:ip_address;type:varchar(255)" json:"ip_address"`
	RemoteAddr          *string `gorm:"column:remote_addr;type:varchar(255)" json:"remote_addr"`
	HTTPXForwardedFor   *string `gorm:"column:http_x_forwarded_for;type:varchar(255)" json:"http_x_forwarded_for"`
	HTTPUserAgent       *string `gorm:"column:http_user_agent;type:text" json:"http_user_agent"`
	CreatedAt           *int32  `gorm:"column:created_at;type:int(11)" json:"created_at"`
	DeviceType          *string `gorm:"column:device_type;type:varchar(255)" json:"device_type"`
	DeviceBrand         *string `gorm:"column:device_brand;type:varchar(255)" json:"device_brand"`
	DeviceModel         *string `gorm:"column:device_model;type:varchar(255)" json:"device_model"`
	OsName              *string `gorm:"column:os_name;type:varchar(255)" json:"os_name"`
	OsVersion           *string `gorm:"column:os_version;type:varchar(255)" json:"os_version"`
	OsPlatform          *string `gorm:"column:os_platform;type:varchar(255)" json:"os_platform"`
	ClientType          *string `gorm:"column:client_type;type:varchar(255)" json:"client_type"`
	ClientName          *string `gorm:"column:client_name;type:varchar(255)" json:"client_name"`
	ClientVersion       *string `gorm:"column:client_version;type:varchar(255)" json:"client_version"`
	ClientEngine        *string `gorm:"column:client_engine;type:varchar(255)" json:"client_engine"`
	ClientEngineVersion *string `gorm:"column:client_engine_version;type:varchar(255)" json:"client_engine_version"`
	BotName             *string `gorm:"column:bot_name;type:varchar(255)" json:"bot_name"`
	BotCategory         *string `gorm:"column:bot_category;type:varchar(255)" json:"bot_category"`
	BotURL              *string `gorm:"column:bot_url;type:varchar(255)" json:"bot_url"`
	BotProducerName     *string `gorm:"column:bot_producer_name;type:varchar(255)" json:"bot_producer_name"`
	BotProducerURL      *string `gorm:"column:bot_producer_url;type:varchar(255)" json:"bot_producer_url"`
}


func (i *Request) BeforeCreate(scope *gorm.DB) error {
    now := int32(time.Now().UTC().Unix())
    i.CreatedAt = &now
    return nil
}

// TableName Request's table name
func (*Request) TableName() string {
	return TableNameRequest
}
