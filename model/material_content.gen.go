// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import (
	"time"

	"gorm.io/gorm"
)

const TableNameMaterialContent = "material_content"

// MaterialContent mapped from table <material_content>
type MaterialContent struct {
	ID             int32    `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	MaterialID     int32    `gorm:"column:material_id;type:int(11);not null;index:learning_material_id,priority:1" json:"material_id"`
	Name           string   `gorm:"column:name;type:varchar(255);not null" json:"name"`
	Type           int32    `gorm:"column:type;type:int(11);not null" json:"type"` // 1 = article, 2 = pdf, 3 = image, 4 = video
	Group          *string  `gorm:"column:group;type:varchar(255)" json:"group"`
	Description    *string  `gorm:"column:description;type:text" json:"description"`
	Content        *string  `gorm:"column:content;type:text" json:"content"`
	Link           *string  `gorm:"column:link;type:varchar(255)" json:"link"`
	File           *string  `gorm:"column:file;type:text" json:"file"`
	Embed          *string  `gorm:"column:embed;type:text" json:"embed"`
	IsDownloadable *int32   `gorm:"column:is_downloadable;type:int(11)" json:"is_downloadable"`
	Sequence       *float64 `gorm:"column:sequence;type:double" json:"sequence"`
	CreatedAt      *int32   `gorm:"column:created_at;type:int(11)" json:"created_at"`
	UpdatedAt      *int32   `gorm:"column:updated_at;type:int(11)" json:"updated_at"`
	CreatedBy      *int32   `gorm:"column:created_by;type:int(11);index:created_by,priority:1" json:"created_by"`
	UpdatedBy      *int32   `gorm:"column:updated_by;type:int(11);index:updated_by,priority:1" json:"updated_by"`
}

type InputMaterialContent struct {
	ID             int32    `gorm:"column:id;type:int(11);primaryKey;autoIncrement:true" json:"id"`
	MaterialID     int32    `gorm:"column:material_id;type:int(11);not null;index:learning_material_id,priority:1" json:"material_id" form:"material_id"`
	Name           string   `gorm:"column:name;type:varchar(255);not null" json:"name" form:"name"`
	Type           int32    `gorm:"column:type;type:int(11);not null" json:"type" form:"type"` // 1 = article, 2 = pdf, 3 = image, 4 = video
	Group          *string  `gorm:"column:group;type:varchar(255)" json:"group" form:"group"`
	Description    *string  `gorm:"column:description;type:text" json:"description" form:"description"`
	Content        *string  `gorm:"column:content;type:text" json:"content" form:"content"`
	Link           *string  `gorm:"column:link;type:varchar(255)" json:"link" form:"link"`
	Embed          *string  `gorm:"column:embed;type:text" json:"embed" form:"embed"`
	Sequence       *float64 `gorm:"column:sequence;type:double" json:"sequence" form:"sequence"`
	CreatedAt      *int32   `gorm:"column:created_at;type:int(11)" json:"created_at"`
	CreatedBy      *int32   `gorm:"column:created_by;type:int(11);index:created_by,priority:1" json:"created_by"`
}

// TableName MaterialContent's table name
func (*MaterialContent) TableName() string {
	return TableNameMaterialContent
}
func (*InputMaterialContent) TableName() string {
	return TableNameMaterialContent
}

func (i *InputMaterialContent) BeforeCreate(scope *gorm.DB) error {
    now := int32(time.Now().UTC().Unix())
    i.CreatedAt = &now
    return nil
}
